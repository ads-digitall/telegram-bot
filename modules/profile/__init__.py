import asyncio
import threading
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from modules.profile import router
from core.logger import get_logger
from modules.profile.config import TELEGRAM_PROFILE_TOKEN

from aiogram.client.default import DefaultBotProperties  # ‚úÖ –¥–æ–±–∞–≤–ª–µ–Ω–æ

logger = get_logger(__name__)


def register(core_manager):
    thread = threading.Thread(target=start_profile_bot, daemon=True)
    thread.start()
    logger.info("‚úÖ –ë–æ—Ç '–ü—Ä–æ—Ñ–∏–ª—å' –∑–∞–ø—É—â–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ.")


def start_profile_bot():
    asyncio.set_event_loop(asyncio.new_event_loop())
    loop = asyncio.get_event_loop()

    storage = MemoryStorage()
    bot = Bot(  # ‚úÖ –æ–±–Ω–æ–≤–ª–µ–Ω–æ
        token=TELEGRAM_PROFILE_TOKEN,
        default=DefaultBotProperties(parse_mode="HTML")
    )
    dp = Dispatcher(storage=storage)
    dp.include_router(router.router)

    try:
        logger.info("üöÄ –ü—Ä–æ—Ñ–∏–ª—å-–±–æ—Ç: –∑–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞")
        loop.run_until_complete(dp.start_polling(bot))
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ '–ü—Ä–æ—Ñ–∏–ª—å': {e}")
