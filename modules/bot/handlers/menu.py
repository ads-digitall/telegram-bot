"""
menu.py

–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é Telegram-–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ ¬´–ë–æ—Ç-2¬ª.
–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: –õ–µ–Ω—Ç–∞, –ö–∞–Ω–∞–ª—ã –ù–æ–≤–æ—Å—Ç–∏, ‚öôÔ∏è–ü—Ä–æ—Ñ–∏–ª—å.
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ user_service, –≤–∏–∑—É–∞–ª ‚Äî –≤ buttons/.
–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫.
"""

from aiogram import Bot  
from aiogram import Router, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from core.logger import get_logger
from modules.bot.buttons import profile_button  # –∑–∞–º–µ–Ω–µ–Ω–æ —Å settings

from modules.bot.services.user_service import register_user_from_message
from modules.bot.handlers.feed import handle_feed_command  # –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞
from error_handler import handle_error

logger = get_logger(__name__)
router = Router()

def get_main_menu() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    try:
        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üì¢ –õ–µ–Ω—Ç–∞"), KeyboardButton(text="üì° –ö–∞–Ω–∞–ª—ã –ù–æ–≤–æ—Å—Ç–∏")],
                [KeyboardButton(text="‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å")]
            ],
            resize_keyboard=True
        )
        return kb
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}")
        handle_error(e, "MenuHandler", "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é")
        return ReplyKeyboardMarkup(keyboard=[], resize_keyboard=True)

@router.message(Command("start"))
async def start_menu_handler(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start: —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
    try:
        await register_user_from_message(message)
    except Exception as e:
        handle_error(e, "MenuHandler", f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    try:
        menu = get_main_menu()
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu)
        logger.info("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
    except Exception as e:
        handle_error(e, "MenuHandler", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ start_menu_handler: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(F.text == "üì¢ –õ–µ–Ω—Ç–∞")
async def handle_feed(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É 'üì¢ –õ–µ–Ω—Ç–∞'.
    """
    try:
        await handle_feed_command(message)  # –í—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É
    except Exception as e:
        handle_error(e, "MenuHandler", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ '–õ–µ–Ω—Ç–∞'")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_feed: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")

@router.message(F.text == "üì° –ö–∞–Ω–∞–ª—ã –ù–æ–≤–æ—Å—Ç–∏")
async def handle_channels(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É 'üì° –ö–∞–Ω–∞–ª—ã –ù–æ–≤–æ—Å—Ç–∏'.
    """
    try:
        await channels.handle(message, bot=None)
    except Exception as e:
        handle_error(e, "MenuHandler", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ '–ö–∞–Ω–∞–ª—ã –ù–æ–≤–æ—Å—Ç–∏'")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handle_channels: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")

@router.message(F.text == "‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É '‚öôÔ∏è –ü—Ä–æ—Ñ–∏–ª—å'.
    """
    try:
        logger.info(f"‚ñ∂Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Ñ–∏–ª—è —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è user_id = {message.from_user.id}")
        await profile_button.handle(message, bot=message.bot)
    except Exception as e:
        handle_error(e, "MenuHandler", "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ '–ü—Ä–æ—Ñ–∏–ª—å'")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ profile_handler: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")

    # –î–ª—è –∞–≤—Ç–æ–¥–∏—Å–∫–∞–≤–µ—Ä–∞:
def register_handler(dp):
    dp.include_router(router)
